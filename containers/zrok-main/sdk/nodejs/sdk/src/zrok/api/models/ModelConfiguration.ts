/* tslint:disable */
/* eslint-disable */
/**
 * zrok
 * zrok client access
 *
 * The version of the OpenAPI document: 0.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PasswordRequirements } from './PasswordRequirements';
import {
    PasswordRequirementsFromJSON,
    PasswordRequirementsFromJSONTyped,
    PasswordRequirementsToJSON,
} from './PasswordRequirements';

/**
 * 
 * @export
 * @interface ModelConfiguration
 */
export interface ModelConfiguration {
    /**
     * 
     * @type {string}
     * @memberof ModelConfiguration
     */
    version?: string;
    /**
     * 
     * @type {string}
     * @memberof ModelConfiguration
     */
    touLink?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ModelConfiguration
     */
    invitesOpen?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ModelConfiguration
     */
    requiresInviteToken?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ModelConfiguration
     */
    inviteTokenContact?: string;
    /**
     * 
     * @type {PasswordRequirements}
     * @memberof ModelConfiguration
     */
    passwordRequirements?: PasswordRequirements;
}

/**
 * Check if a given object implements the ModelConfiguration interface.
 */
export function instanceOfModelConfiguration(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ModelConfigurationFromJSON(json: any): ModelConfiguration {
    return ModelConfigurationFromJSONTyped(json, false);
}

export function ModelConfigurationFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelConfiguration {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'version': !exists(json, 'version') ? undefined : json['version'],
        'touLink': !exists(json, 'touLink') ? undefined : json['touLink'],
        'invitesOpen': !exists(json, 'invitesOpen') ? undefined : json['invitesOpen'],
        'requiresInviteToken': !exists(json, 'requiresInviteToken') ? undefined : json['requiresInviteToken'],
        'inviteTokenContact': !exists(json, 'inviteTokenContact') ? undefined : json['inviteTokenContact'],
        'passwordRequirements': !exists(json, 'passwordRequirements') ? undefined : PasswordRequirementsFromJSON(json['passwordRequirements']),
    };
}

export function ModelConfigurationToJSON(value?: ModelConfiguration | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'version': value.version,
        'touLink': value.touLink,
        'invitesOpen': value.invitesOpen,
        'requiresInviteToken': value.requiresInviteToken,
        'inviteTokenContact': value.inviteTokenContact,
        'passwordRequirements': PasswordRequirementsToJSON(value.passwordRequirements),
    };
}

