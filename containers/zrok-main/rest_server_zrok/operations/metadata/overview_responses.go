// Code generated by go-swagger; DO NOT EDIT.

package metadata

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openziti/zrok/rest_model_zrok"
)

// OverviewOKCode is the HTTP code returned for type OverviewOK
const OverviewOKCode int = 200

/*
OverviewOK overview returned

swagger:response overviewOK
*/
type OverviewOK struct {

	/*
	  In: Body
	*/
	Payload *rest_model_zrok.Overview `json:"body,omitempty"`
}

// NewOverviewOK creates OverviewOK with default headers values
func NewOverviewOK() *OverviewOK {

	return &OverviewOK{}
}

// WithPayload adds the payload to the overview o k response
func (o *OverviewOK) WithPayload(payload *rest_model_zrok.Overview) *OverviewOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the overview o k response
func (o *OverviewOK) SetPayload(payload *rest_model_zrok.Overview) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *OverviewOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// OverviewInternalServerErrorCode is the HTTP code returned for type OverviewInternalServerError
const OverviewInternalServerErrorCode int = 500

/*
OverviewInternalServerError internal server error

swagger:response overviewInternalServerError
*/
type OverviewInternalServerError struct {

	/*
	  In: Body
	*/
	Payload rest_model_zrok.ErrorMessage `json:"body,omitempty"`
}

// NewOverviewInternalServerError creates OverviewInternalServerError with default headers values
func NewOverviewInternalServerError() *OverviewInternalServerError {

	return &OverviewInternalServerError{}
}

// WithPayload adds the payload to the overview internal server error response
func (o *OverviewInternalServerError) WithPayload(payload rest_model_zrok.ErrorMessage) *OverviewInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the overview internal server error response
func (o *OverviewInternalServerError) SetPayload(payload rest_model_zrok.ErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *OverviewInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
